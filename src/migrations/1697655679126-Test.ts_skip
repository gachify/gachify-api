import { MigrationInterface, QueryRunner } from "typeorm";

export class Test1697655679126 implements MigrationInterface {
    name = 'Test1697655679126'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "songs" ("id" SERIAL NOT NULL, "uuid" uuid NOT NULL DEFAULT uuid_generate_v4(), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "name" character varying NOT NULL, "duration" integer NOT NULL, "playback_count" integer NOT NULL DEFAULT '0', "artist_id" integer, CONSTRAINT "PK_e504ce8ad2e291d3a1d8f1ea2f4" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "artists" ("id" SERIAL NOT NULL, "uuid" uuid NOT NULL DEFAULT uuid_generate_v4(), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "name" character varying NOT NULL, CONSTRAINT "PK_09b823d4607d2675dc4ffa82261" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "users" ("id" SERIAL NOT NULL, "uuid" uuid NOT NULL DEFAULT uuid_generate_v4(), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "username" character varying NOT NULL, "avatar" character varying, "hash" character varying NOT NULL, CONSTRAINT "UQ_fe0bb3f6520ee0469504521e710" UNIQUE ("username"), CONSTRAINT "PK_a3ffb1c0c8416b9fc6f907b7433" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "playlists" ("id" SERIAL NOT NULL, "uuid" uuid NOT NULL DEFAULT uuid_generate_v4(), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "name" character varying NOT NULL, "user_id" integer, CONSTRAINT "PK_a4597f4189a75d20507f3f7ef0d" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "analytics" ("id" SERIAL NOT NULL, "uuid" uuid NOT NULL DEFAULT uuid_generate_v4(), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "song_count" integer NOT NULL DEFAULT '0', "total_duration" integer NOT NULL DEFAULT '0', "user_id" integer, CONSTRAINT "REL_478656673247334d8cea26a2c1" UNIQUE ("user_id"), CONSTRAINT "PK_3c96dcbf1e4c57ea9e0c3144bff" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "playlists_songs_songs" ("playlists_id" integer NOT NULL, "songs_id" integer NOT NULL, CONSTRAINT "PK_6db20a86f353d57e232188872b3" PRIMARY KEY ("playlists_id", "songs_id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_a7419a79549846b01acbe9a6be" ON "playlists_songs_songs" ("playlists_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_5d5e20b2df403802d8970f6e04" ON "playlists_songs_songs" ("songs_id") `);
        await queryRunner.query(`ALTER TABLE "songs" ADD CONSTRAINT "FK_999ba7dd3c94dd5f9649944a5c6" FOREIGN KEY ("artist_id") REFERENCES "artists"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "playlists" ADD CONSTRAINT "FK_a3ea169575c25e5c55494d7f382" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "analytics" ADD CONSTRAINT "FK_478656673247334d8cea26a2c12" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "playlists_songs_songs" ADD CONSTRAINT "FK_a7419a79549846b01acbe9a6bed" FOREIGN KEY ("playlists_id") REFERENCES "playlists"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "playlists_songs_songs" ADD CONSTRAINT "FK_5d5e20b2df403802d8970f6e04b" FOREIGN KEY ("songs_id") REFERENCES "songs"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "playlists_songs_songs" DROP CONSTRAINT "FK_5d5e20b2df403802d8970f6e04b"`);
        await queryRunner.query(`ALTER TABLE "playlists_songs_songs" DROP CONSTRAINT "FK_a7419a79549846b01acbe9a6bed"`);
        await queryRunner.query(`ALTER TABLE "analytics" DROP CONSTRAINT "FK_478656673247334d8cea26a2c12"`);
        await queryRunner.query(`ALTER TABLE "playlists" DROP CONSTRAINT "FK_a3ea169575c25e5c55494d7f382"`);
        await queryRunner.query(`ALTER TABLE "songs" DROP CONSTRAINT "FK_999ba7dd3c94dd5f9649944a5c6"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_5d5e20b2df403802d8970f6e04"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_a7419a79549846b01acbe9a6be"`);
        await queryRunner.query(`DROP TABLE "playlists_songs_songs"`);
        await queryRunner.query(`DROP TABLE "analytics"`);
        await queryRunner.query(`DROP TABLE "playlists"`);
        await queryRunner.query(`DROP TABLE "users"`);
        await queryRunner.query(`DROP TABLE "artists"`);
        await queryRunner.query(`DROP TABLE "songs"`);
    }

}
